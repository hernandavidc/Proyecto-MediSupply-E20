apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  namespace: medisupply
  labels:
    app: user-service
    service: user-service
spec:
  replicas: 2  # MÃ­nimo para alta disponibilidad
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        service: user-service
    spec:
      containers:
      - name: user-service
        image: gcr.io/PROJECT_ID/medisupply-user-service:latest
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: user-service-secret
        - configMapRef:
            name: user-service-config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      # Wait for database to be ready
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for db; sleep 2; done;']
