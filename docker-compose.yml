services:
  medisupply-user-service:
    build: 
      context: ./user-service
      dockerfile: Dockerfile
    container_name: medisupply-user-service
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@medisupply-user-db:5432/users_db
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      medisupply-user-db:
        condition: service_healthy
    networks:
      - medisupply-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  medisupply-user-db:
    image: postgres:15-alpine
    container_name: medisupply-user-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - medisupply-user-db-data:/var/lib/postgresql/data
      - ./user-service/init-db:/docker-entrypoint-initdb.d
    networks:
      - medisupply-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d users_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  medisupply-supplier-db:
    image: postgres:15-alpine
    container_name: medisupply-supplier-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: supplier_user
      POSTGRES_PASSWORD: supplier_password
      POSTGRES_DB: suppliers_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5434:5432"
    volumes:
      - medisupply-supplier-db-data:/var/lib/postgresql/data
      - ./medisupply-supplier-service/init-db:/docker-entrypoint-initdb.d
    networks:
      - medisupply-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supplier_user -d suppliers_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  medisupply-supplier-service:
    build:
      context: ./medisupply-supplier-service
      dockerfile: Dockerfile
    container_name: medisupply-supplier-service
    restart: unless-stopped
    ports:
      - "8010:8000"
    environment:
      - DATABASE_URL=postgresql://supplier_user:supplier_password@medisupply-supplier-db:5432/suppliers_db
      - SECRET_KEY=replace_with_secure_secret
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      medisupply-supplier-db:
        condition: service_healthy
    networks:
      - medisupply-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Client Service Database
  medisupply-client-db:
    image: postgres:15-alpine
    container_name: medisupply-client-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: client_user
      POSTGRES_PASSWORD: client_password
      POSTGRES_DB: clients_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5435:5432"
    volumes:
      - medisupply-client-db-data:/var/lib/postgresql/data
    networks:
      - medisupply-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U client_user -d clients_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Client Service
  medisupply-client-service:
    build:
      context: ./medisupply-client-service
      dockerfile: Dockerfile
    container_name: medisupply-client-service
    restart: unless-stopped
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://client_user:client_password@medisupply-client-db:5432/clients_db
      - SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - USER_SERVICE_URL=http://medisupply-user-service:8000
      - DEBUG=true
      - LOG_LEVEL=INFO
      - NIT_VALIDATION_SERVICE_URL=
    depends_on:
      medisupply-client-db:
        condition: service_healthy
      medisupply-user-service:
        condition: service_started
    networks:
      - medisupply-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  medisupply-user-db-data:
    driver: local
  medisupply-supplier-db-data:
    driver: local
  medisupply-client-db-data:
    driver: local

networks:
  medisupply-network:
    driver: bridge
    name: medisupply-network
